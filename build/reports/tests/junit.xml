<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="" tests="12" failures="0" errors="0" time="2.455">
  <testsuite name="Subject: Validate Yaml" errors="0" failures="0" skipped="0" timestamp="2024-08-27T18:53:38" time="1.21" tests="1">
    <testcase classname="Subject: Validate Yaml Scenario 01: If the yaml content is valid, validation returns true and no errors" name="Subject: Validate Yaml Scenario 01: If the yaml content is valid, validation returns true and no errors" time="0.035">
    </testcase>
  </testsuite>
  <testsuite name="Subject: Read Yaml" errors="0" failures="0" skipped="0" timestamp="2024-08-27T18:53:38" time="1.204" tests="7">
    <testcase classname="Subject: Read Yaml Scenario 01: It throws and exception if file does not exist and falg is set to true" name="Subject: Read Yaml Scenario 01: It throws and exception if file does not exist and falg is set to true" time="0.014">
    </testcase>
    <testcase classname="Subject: Read Yaml Scenario 02: It returns empty object if file does not exist and falg is set to false" name="Subject: Read Yaml Scenario 02: It returns empty object if file does not exist and falg is set to false" time="0.001">
    </testcase>
    <testcase classname="Subject: Read Yaml Scenario 03: Is should read a single file successfully" name="Subject: Read Yaml Scenario 03: Is should read a single file successfully" time="0.007">
    </testcase>
    <testcase classname="Subject: Read Yaml Scenario 04: If I pass multiple files content from the last overides the first" name="Subject: Read Yaml Scenario 04: If I pass multiple files content from the last overides the first" time="0.002">
    </testcase>
    <testcase classname="Subject: Read Yaml Scenario 05: Environment variables are replaced on the file content" name="Subject: Read Yaml Scenario 05: Environment variables are replaced on the file content" time="0.002">
    </testcase>
    <testcase classname="Subject: Read Yaml Scenario 06: If I disable environment variables replacement they are not replaced on the the file content" name="Subject: Read Yaml Scenario 06: If I disable environment variables replacement they are not replaced on the the file content" time="0.001">
    </testcase>
    <testcase classname="Subject: Read Yaml Scenario 07: If the file links to a schema, the reader validates the content and throws if it is not valid" name="Subject: Read Yaml Scenario 07: If the file links to a schema, the reader validates the content and throws if it is not valid" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Subject: Read Schema" errors="0" failures="0" skipped="0" timestamp="2024-08-27T18:53:38" time="2.221" tests="4">
    <testcase classname="Subject: Read Schema Scenario 01: It throws reading an invalid schema" name="Subject: Read Schema Scenario 01: It throws reading an invalid schema" time="0.002">
    </testcase>
    <testcase classname="Subject: Read Schema Scenario 02: Is should successfully read a single json schema" name="Subject: Read Schema Scenario 02: Is should successfully read a single json schema" time="0.043">
    </testcase>
    <testcase classname="Subject: Read Schema Scenario 03: Is should successfully read a json schema from an uri" name="Subject: Read Schema Scenario 03: Is should successfully read a json schema from an uri" time="0.032">
    </testcase>
    <testcase classname="Subject: Read Schema Scenario 04: Is should successfully read a yaml schema from an uri" name="Subject: Read Schema Scenario 04: Is should successfully read a yaml schema from an uri" time="0.006">
    </testcase>
    <system-out><![CDATA[[
  {
    "message": "\u001b[1m\u001b[31m[YAML-JS/Reader.SchemaReader]\u001b[0m Invalid schema: ./tests/resources/schema-invalid.yaml [ [ 'must be object' ] ]",
    "origin": "    at log (/Users/pedro.gomes/work/repositories-personal/yaml-js/reader/src/logger.ts:44:15)\n    at writer (/Users/pedro.gomes/work/repositories-personal/yaml-js/reader/src/logger.ts:59:7)\n    at Object.log [as error] (/Users/pedro.gomes/work/repositories-personal/yaml-js/reader/src/logger.ts:68:62)\n    at SchemaReader.error [as parseSchema] (/Users/pedro.gomes/work/repositories-personal/yaml-js/reader/src/schemaReader.ts:29:19)\n    at SchemaReader.parseSchema [as read] (/Users/pedro.gomes/work/repositories-personal/yaml-js/reader/src/schemaReader.ts:44:19)",
    "type": "log"
  }
]]]></system-out>
  </testsuite>
</testsuites>